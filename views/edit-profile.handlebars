<script type="text/javascript">
          document.getElementById("subHeader").className = "show";
  </script>


<!--
   ============================================================================
       A NOTE ON NAVIGATION:
       These links are not needed for integration into your site. These links
       are only used for navigating the reference implementation that exists on
       our servers for testing/demo/sample purposes. It is not required for
       your implementation.

       Here you can see an example of using janrain.capture.ui.renderScreen in
       conjunction with HTML elements to simplify user navigation.
   ============================================================================
   -->

   <!-- accountDeactivated:
       This screen is rendered if the user's account is deactivated. Screen
       rendering is handled in janrain-init.js.
   -->
   <div style="display:none;" id="accountDeactivated">
       <div class="capture_header">
           <h1>Deactivated Account </h1>
       </div>
       <div class="content_wrapper">
           <p>Your account has been deactivated.</p>
       </div>
   </div>

   <!--
   ============================================================================
       FORGOT PASSWORD SCREENS:
       The following screens are part of the forgot password user workflow. For
       a complete out-of-the-box registration experience, these screens must be
       included on the page where you are implementing forgot password
       functionality.
   ============================================================================
   -->

   <!-- forgotPassword:
       Entry point into the forgot password user workflow. This screen is
       rendered when the user clicks on the 'Forgot your password?' link on the
       signIn screen.
   -->
   <div style="display:none;" id="forgotPassword">
       <div class="capture_header">
           <h1>Create a new password</h1>
       </div>
       <h2>We'll send you a link to create a new password.</h2>
       {* #forgotPasswordForm *}
           {* signInEmailAddress *}
           <div class="capture_footer">
               <div class="capture_left">
                   {* backButton *}
               </div>
               <div class="capture_right">
                   <input value="Send" type="submit" class="capture_btn capture_primary">
               </div>
           </div>
       {* /forgotPasswordForm *}
   </div>

   <!-- forgotPasswordSuccess:
       When the user submits an email address on the forgotPassword screen,
       this screen is rendered.
   -->
   <div style="display:none;" id="forgotPasswordSuccess">
       <div class="capture_header">
           <h1>Create a new password</h1>
       </div>
           <p>We've sent an email with instructions to create a new password. Your existing password has not been changed.</p>
   </div>




   <!--
   ============================================================================
       EMAIL VERIFICATION SCREENS:
       The following screens are part of the email verification user workflow.
       For a complete out-of-the-box email verification experience, these
       screens must be included on page where you are implementing email
       verification.
   ============================================================================
   -->

   <!-- verifyEmail:
       This is the landing screen after a user clicks on the link in the
       verification email sent to the user when they've registered with a
       non-verified email address.

       HOW IT WORKS: The code that is generated by Capture and included in the
       link sent in the verification email is sent to the server and, if valid,
       the user's email will be marked as valid and the verifyEmailSuccess
       screen will be rendered. If the code is not accepted for any reason,
       the verifyEmail screen is shown and the user has another opportunity
       to have the verification email sent to them.

       NOTE: The links generated in the emails sent to users are based on
       Capture settings found in Janrain's Capture Dashboard. In addition to
       entering the URL of your email verification page, you will need to add
       'screenToRender' as a parameter in the URL with a value of 'verifyEmail'
       which is this screen.
   -->
   <div style="display:none;" id="verifyEmail">
       <div class="capture_header">
           <h1>Resend Email Verification</h1>
       </div>

       <p>Sorry we could not verify that email address. Enter your email below and we'll send you another email.</p>

       {* #resendVerificationForm *}
           {* signInEmailAddress *}
           <div class="capture_footer">
               <input value="Submit" type="submit" class="capture_btn capture_primary">
           </div>
        {* /resendVerificationForm *}
   </div>


   <!-- resendVerificationSuccess:
       This screen is rendered when a user enters an email address from the
       verifyEmail screen.
   -->
   <div style="display:none;" id="resendVerificationSuccess">
       <div class="capture_header">
           <h1>Your Verification Email Has Been Sent</h1>
       </div>
       <div class="hr"></div>
       <p>Check your email for a link to verify your email.</p>
       <div class="capture_footer">
           <a href="index.html" class="capture_btn capture_primary">Sign in</a>
       </div>
   </div>

   <!-- verifyEmailSuccess:
       This screen is rendered if the verification code provided in the link
       sent to the user in the verification email is accepted and the user's
       email address has been verified.
   -->
   <div style="display:none;" id="verifyEmailSuccess">
       <div class="capture_header">
           <h1>You did it!</h1>
       </div>
       <p>Thank you for verifiying your email address.
       <div class="capture_footer">
           <a href="index.html" class="capture_btn capture_primary">Sign in</a>
       </div>
   </div>




   <!--
   ============================================================================
       RESET PASSWORD SCREENS:
       The following screens are part of the password reset user workflow.
       For a complete out-of-the-box password reset experience, these screens
       must be included on the page where you are implementing password reset
       functionality.

       NOTE: The order in which these screens are rendered is as follows:
       resetPasswordRequestCode
       resetPasswordRequestCodeSuccess
       resetPassword
       resetPasswordSuccess
   ============================================================================
   -->

   <!-- resetPassword:
       This screen is rendered when the user clicks the link in provided in the
       password reset email and the code in the link is valid.
   -->
   <div style="display:none;" id="resetPassword">
       <div class="capture_header">
           <h1>Change password</h1>
       </div>
       {* #changePasswordFormNoAuth *}
           {* newPassword *}
           {* newPasswordConfirm *}
           <div class="capture_footer">
               <input value="Submit" type="submit" class="capture_btn capture_primary">
           </div>
       {* /changePasswordFormNoAuth *}
   </div>
   <!-- resetPasswordSuccess:
       This screen is rendered when the user successfully changes their
       password from the resetPassword screen.
   -->
   <div style="display:none;" id="resetPasswordSuccess">
       <div class="capture_header">
           <h1>Your password has been changed</h1>
       </div>
       <p>Password has been successfully updated.</p>
       <div class="capture_footer">
           <a href="index.html" class="capture_btn capture_primary">Sign in</a>
       </div>
   </div>
   <!-- resetPasswordRequestCode:
       This is the landing screen for the password reset workflow. When the
       user clicks the link provided in the reset password email, a code is
       supplied and is passed to Capture for verification. If the code is valid
       the resetPassword screen is rendered immediately and the content of
       this screen is not presented. If the code is not accepted for any reason
       this screen is then presented, allowing the user to re-enter their
       email address.
   -->
   <div style="display:none;" id="resetPasswordRequestCode">
       <div class="capture_header">
           <h1>Create a new password</h1>
       </div>
       <p>We didn't recognize that password reset code. Enter your email address to get a new one.</p>
       {* #resetPasswordForm *}
           {* signInEmailAddress *}
           <div class="capture_footer">
               <input value="Send" type="submit" class="capture_btn capture_primary">
           </div>
       {* /resetPasswordForm *}
   </div>

   <!-- resetPasswordRequestCodeSuccess:
       This screen is rendered if the user submitted an email address on the
       resetPasswordRequestCode screen.
   -->
   <div style="display:none;" id="resetPasswordRequestCodeSuccess">
       <div class="capture_header">
           <h1>Create a new password</h1>
       </div>
           <p>We've sent an email with instructions to create a new password. Your existing password has not been changed.</p>
   </div>




   <!--
   ============================================================================
       EDIT PROFILE SCREENS:
       The following screens are part of the profile editing user workflow.
       For a complete out-of-the-box profile editing experience, these screens
       must be included on the page where you are implementing profile editing
       functionality.
   ============================================================================
   -->

   <!-- editProfile
       This screen is where the user can edit their profile data. It can be
       rendered in whatever way works best for your implementation, be it
       using the data-capturescreen attribute, janrain.capture.ui.renderScreen
       or passing in 'screenToRender' in the URL linking to the page where
       you have implemented edit profile.
   -->
   <div style="display:none;" id="editProfile">
       <h1>Edit Your Account</h1>
       <div class="capture_grid_block">
           <div class="capture_col_4">
               <h3>Profile Photo</h3>
               <div class="contentBoxWhiteShadow">
                   {* photoManager *}
               </div>
               <!-- Only show this if it was from a traditional login !-->
               <h3 class="janrain_traditional_account_only">Password</h3>
               <div class="janrain_traditional_account_only contentBoxWhiteShadow">
                   <a href="#" data-capturescreen="changePassword">Change Password</a>
               </div>
               <h3>Deactivate Account</h3>
               <div class="capture_deactivate_section contentBoxWhiteShadow clearfix">
                   <a href="#" data-capturescreen="confirmAccountDeactivation">Deactivate Account</a>
               </div>
           </div>
           <div class="capture_col_8">
               <h3>Account Info</h3>
               <div class="contentBoxWhiteShadow">
                   <div class="capture_grid_block">
                       <div class="capture_center_col capture_col_8">
                           <div class="capture_editCol">
                               {* #editProfileForm *}
                                   {* firstName *}
                                   {* lastName *}
                                   {* emailAddressData *}
                                   {* professionalGroup *}
                                   {* organizationName *}
                                   {* healthSystem *}
                                   <div class="capture_form_item">
                                       <input value="Save" type="submit" class="capture_btn capture_primary">
                                       {* savedProfileMessage *}
                                   </div>
                               {* /editProfileForm *}
                           </div>
                       </div>
                   </div>
               </div>
           </div>
       </div>
   </div>

   <!-- changePassword:
       This screen is rendered when the user clicks the 'Change Password' link
       on the edit profile page. After the user enters their new password,
       the edit profile screen is refreshed and displayed.
   -->
   <div style="display:none;" id="changePassword">
       <div class="capture_header">
           <h1>Change password</h1>
       </div>
       {* #changePasswordForm *}
           {* currentPassword *}
           {* newPassword *}
           {* newPasswordConfirm *}
           <div class="capture_footer">
               <input value="Save" type="submit" class="capture_btn capture_primary">
           </div>
       {* /changePasswordForm *}
   </div>

   <!-- confirmAccountDeactivation:
       If the user clicks the 'Deactivate Account' link on the edit profile
       page, this screen is rendered. From here, the user can deactivate their
       account.
   -->
   <div style="display:none;" id="confirmAccountDeactivation">
       <div class="capture_header">
           <h1>Deactivate your Account</h1>
       </div>
       <div class="content_wrapper">
           <p>Are you sure you want to deactivate your account? You will no longer have access to your profile.</p>
           {* deactivateAccountForm *}
               <div class="capture_footer">
                   <input value="Yes" type="submit" class="capture_btn capture_primary">
                   <a href="#" id="capture_confirmAccountDeactivation_noButton" onclick="janrain.capture.ui.modal.close()" class="capture_btn capture_primary">No</a>
               </div>
           </div>
           {* /deactivateAccountForm *}
       </div>
   </div>




   <!--
   ============================================================================
       POST-LOGIN SCREENS:
       The following screens are part of the post-login workflow.
   ============================================================================
   -->

   <!-- userStatusPostLogin:
       When a user attempts to login with an account that has not been validated
       by a Lilly administrator.
   -->
   <div style="display:none;" id="userStatusPostLogin">
       <p>Access denied. Your account has not been activated.</p>
   </div>


   <!-- emailNotVerified:
       When a user attempts to login with an account that does not have a verified
       email address.
   -->
   <div style="display:none;" id="emailNotVerified">
       <div class="capture_header">
           <h1>Email Not Verified</h1>
       </div>
       <h2>Your email has not been verified.</h2>
       <p>Enter your email address in the form below to resend your verification email.</p>

       {* #resendVerificationForm *}
           {* signInEmailAddress *}
           <div class="capture_footer">
               <input value="Submit" type="submit" class="capture_btn capture_primary">
           </div>
       {* /resendVerificationForm *}

   </div>
